
parameters:
    images_directory: '%kernel.project_dir%/public/uploads/images'
    carousel_directory: '%kernel.project_dir%/public/uploads/images/carousel'
    env(ZOO_EMAIL): '%env(ZOO_EMAIL)%'
    admin_email: '%env(ADMIN_EMAIL)%'
    admin_password: '%env(ADMIN_PASSWORD)%'
    admin_role: '%env(ADMIN_ROLE)%'
    env(MONGODB_URL): ''
    env(MONGODB_DB): ''
    
    user_roles_map:
            admin: ['ROLE_ADMIN']
            employe: ['ROLE_EMPLOYE']
            veterinaire: ['ROLE_VETERINAIRE']

services:
    Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface: '@security.user_password_hasher'

    _defaults:
        autowire: true      
        autoconfigure: true 
        bind:
            $passwordHasher: '@security.password_hasher'
    

    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    App\Controller\:
            resource: '../src/Controller'
            tags: ['controller.service_arguments']

    App\Service\MailerService:
        arguments:
            $fromEmail: '%env(MAILER_FROM_EMAIL)%'

    App\Service\ImageManagerService:
        arguments:
            $imageDirectory: '%images_directory%'
   
    App\Service\ServiceService:
        arguments:
            $entityManager: '@doctrine.orm.entity_manager'


    App\Command\InitializeAdminCommand:
            arguments:
                $adminInitializer: '@App\Service\AdminInitializer'

    App\Command\CleanExpiredTokensCommand:
        tags: ['console.command']

    App\Service\AdminInitializer:
        arguments:
            $parameterBag: '@parameter_bag'
            $entityManager: '@doctrine.orm.entity_manager'
            $passwordHasher: '@security.password_hasher'
            $logger: '@logger'
            # $jwtSecret: '%env(JWT_SECRET)%'
   
    App\Controller\RegistrationController:
        arguments:
            $rolesMap: '%user_roles_map%'

    App\EventListener\JwtMiddleware:
        arguments:
            $secretKey: '%env(JWT_SECRET)%'
            $protectedRoutes: ['_app_api_admin_register_new']
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: 10 }
       
    

    App\Controller\LogoutController:
        public: true
        tags: ['controller.service_arguments']